











































































































































































100%|██████████| 160000/160000 [05:45<00:00, 462.50it/s]
  0%|          | 0/40000 [00:00<?, ?it/s]




























100%|██████████| 40000/40000 [00:59<00:00, 677.65it/s]
  0%|          | 0/160000 [00:00<?, ?it/s]













































































































































































100%|██████████| 160000/160000 [05:48<00:00, 458.69it/s]
  0%|          | 0/40000 [00:00<?, ?it/s]





























100%|██████████| 40000/40000 [00:59<00:00, 669.77it/s]
  0%|          | 192/160000 [00:00<06:04, 438.88it/s]










































































































































































100%|█████████▉| 159744/160000 [05:45<00:00, 470.64it/s]
100%|██████████| 160000/160000 [05:45<00:00, 462.70it/s]




























 98%|█████████▊| 39000/40000 [00:56<00:01, 706.38it/s]
Test Epoch: 2 | Loss: 2.225428 | Acc: 0.182250
[{'epoch': 0,
  'test_acc': 0.18225,
  'test_loss': 2.225535546875,
  'train_acc': 0.1794375,
  'train_loss': 2.2306005834579468},
 {'epoch': 1,
  'test_acc': 0.18225,
  'test_loss': 2.2254708984375,
  'train_acc': 0.1794375,
  'train_loss': 2.2304865071296693},
 {'epoch': 2,
  'test_acc': 0.18225,
  'test_loss': 2.225427734375,
  'train_acc': 0.1794375,

100%|██████████| 40000/40000 [00:57<00:00, 694.62it/s]
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).














































































































































































100%|██████████| 160360/160360 [05:50<00:00, 457.21it/s]
  0%|          | 0/40090 [00:00<?, ?it/s]




























100%|██████████| 40090/40090 [00:58<00:00, 680.59it/s]
  0%|          | 64/160360 [00:00<06:15, 427.44it/s]













































































































































































100%|█████████▉| 160192/160360 [05:47<00:00, 479.74it/s]
100%|██████████| 160360/160360 [05:47<00:00, 461.60it/s]




























 97%|█████████▋| 39000/40090 [00:56<00:01, 693.04it/s]
100%|██████████| 40090/40090 [00:58<00:00, 691.15it/s]














































































































































































100%|██████████| 160360/160360 [05:52<00:00, 455.29it/s]
  0%|          | 0/40090 [00:00<?, ?it/s]






























100%|██████████| 40090/40090 [00:59<00:00, 669.53it/s]
Test Epoch: 2 | Loss: 2.227481 | Acc: 0.180644
[{'epoch': 0,
  'test_acc': 0.18064355200798204,
  'test_loss': 2.2275590858069343,
  'train_acc': 0.17933399850336743,
  'train_loss': 2.2307049395646144},
 {'epoch': 1,
  'test_acc': 0.18064355200798204,
  'test_loss': 2.227515823771514,
  'train_acc': 0.17933399850336743,
  'train_loss': 2.230712389737836},
 {'epoch': 2,
  'test_acc': 0.18064355200798204,
  'test_loss': 2.2274805515714644,
  'train_acc': 0.17933399850336743,
  'train_loss': 2.2306941482722835}]
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).










































































































































































100%|█████████▉| 160256/160576 [05:45<00:00, 472.33it/s]
100%|██████████| 160576/160576 [05:46<00:00, 463.37it/s]




























 97%|█████████▋| 39000/40144 [00:57<00:01, 702.42it/s]
100%|██████████| 40144/40144 [00:58<00:00, 680.56it/s]













































































































































































 99%|█████████▉| 159680/160576 [05:47<00:02, 441.22it/s]
100%|██████████| 160576/160576 [05:49<00:00, 459.83it/s]




























 97%|█████████▋| 39000/40144 [00:56<00:01, 685.80it/s]
100%|██████████| 40144/40144 [00:57<00:00, 694.45it/s]















































































































































































100%|██████████| 160576/160576 [05:53<00:00, 453.96it/s]
  0%|          | 0/40144 [00:00<?, ?it/s]





























 97%|█████████▋| 39000/40144 [00:56<00:01, 691.24it/s]
Test Epoch: 2 | Loss: 2.232076 | Acc: 0.177636
[{'epoch': 0,
  'test_acc': 0.17763551215623755,
  'test_loss': 2.2320863640892785,
  'train_acc': 0.17978402750099642,
  'train_loss': 2.229967314012025},
 {'epoch': 1,
  'test_acc': 0.17763551215623755,
  'test_loss': 2.2320941485651655,
  'train_acc': 0.17978402750099642,
  'train_loss': 2.2299512633768006},
 {'epoch': 2,
  'test_acc': 0.17763551215623755,
  'test_loss': 2.232076438882523,
  'train_acc': 0.17978402750099642,

100%|██████████| 40144/40144 [00:58<00:00, 684.84it/s]
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).












































































































































































100%|██████████| 160942/160942 [05:48<00:00, 461.92it/s]
  0%|          | 0/40235 [00:00<?, ?it/s]





























 97%|█████████▋| 39000/40235 [00:57<00:01, 693.30it/s]
100%|██████████| 40235/40235 [00:59<00:00, 681.34it/s]












































































































































































100%|██████████| 160942/160942 [05:47<00:00, 462.65it/s]
  0%|          | 0/40235 [00:00<?, ?it/s]





























 99%|█████████▉| 40000/40235 [00:58<00:00, 710.48it/s]
100%|██████████| 40235/40235 [00:58<00:00, 685.66it/s]










































































































































































100%|█████████▉| 160448/160942 [05:44<00:01, 457.78it/s]
100%|██████████| 160942/160942 [05:45<00:00, 465.28it/s]





























100%|██████████| 40235/40235 [00:58<00:00, 686.38it/s]
Test Epoch: 2 | Loss: 2.231445 | Acc: 0.178302
[{'epoch': 0,
  'test_acc': 0.17830247297129365,
  'test_loss': 2.2313166009071703,
  'train_acc': 0.1791080016403425,
  'train_loss': 2.2308681801997916},
 {'epoch': 1,
  'test_acc': 0.17830247297129365,
  'test_loss': 2.2314641714303467,
  'train_acc': 0.1791080016403425,
  'train_loss': 2.230863719851586},
 {'epoch': 2,
  'test_acc': 0.17830247297129365,
  'test_loss': 2.2314453367714675,
  'train_acc': 0.1791080016403425,
  'train_loss': 2.2308439020178974}]
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).











































































































































































100%|█████████▉| 160768/161274 [05:44<00:01, 458.10it/s]
100%|██████████| 161274/161274 [05:45<00:00, 467.25it/s]




























100%|██████████| 40318/40318 [00:58<00:00, 692.80it/s]
  0%|          | 384/161274 [00:00<05:33, 482.60it/s]

















































































































































































100%|██████████| 161274/161274 [05:59<00:00, 448.56it/s]
  0%|          | 0/40318 [00:00<?, ?it/s]
































100%|██████████| 40318/40318 [03:47<00:00, 177.42it/s]
  0%|          | 320/161274 [00:00<06:35, 407.47it/s]












































































































































































100%|██████████| 161274/161274 [17:37<00:00, 152.57it/s]
  0%|          | 0/40318 [00:00<?, ?it/s]




























100%|██████████| 40318/40318 [01:09<00:00, 580.89it/s]
Test Epoch: 2 | Loss: 2.232912 | Acc: 0.177216
[{'epoch': 0,
  'test_acc': 0.1772161317525671,
  'test_loss': 2.232962983344908,
  'train_acc': 0.17891910661358928,
  'train_loss': 2.2310257189812277},
 {'epoch': 1,
  'test_acc': 0.1772161317525671,
  'test_loss': 2.2330575440870084,
  'train_acc': 0.17891910661358928,
  'train_loss': 2.2309862101336893},
 {'epoch': 2,
  'test_acc': 0.1772161317525671,
  'test_loss': 2.2329116337615953,
  'train_acc': 0.17891910661358928,
  'train_loss': 2.2310048799017927}]
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).









































































































































































100%|██████████| 161609/161609 [27:55<00:00, 96.43it/s]
  0%|          | 0/40402 [00:00<?, ?it/s]




























100%|██████████| 40402/40402 [28:16<00:00, 23.81it/s]
  0%|          | 576/161609 [00:01<05:42, 469.66it/s]












































































































































































100%|█████████▉| 161344/161609 [3:01:16<00:00, 412.34it/s]
100%|██████████| 161609/161609 [3:01:16<00:00, 14.86it/s]




























100%|██████████| 40402/40402 [50:13<00:00, 13.41it/s]
  0%|          | 576/161609 [00:01<05:37, 476.69it/s]











































































































































































100%|██████████| 161609/161609 [2:43:41<00:00, 16.45it/s]
  2%|▏         | 1000/40402 [00:01<00:57, 685.74it/s]




























100%|██████████| 40402/40402 [01:09<00:00, 581.36it/s]
Test Epoch: 2 | Loss: 2.236306 | Acc: 0.176452
[{'epoch': 0,
  'test_acc': 0.17645166080887084,
  'test_loss': 2.2362373381887037,
  'train_acc': 0.17864722880532644,
  'train_loss': 2.2307260687494965},
 {'epoch': 1,
  'test_acc': 0.17645166080887084,
  'test_loss': 2.2361449077397157,
  'train_acc': 0.17864722880532644,
  'train_loss': 2.230728955141366},
 {'epoch': 2,
  'test_acc': 0.17645166080887084,
  'test_loss': 2.2363055974951735,
  'train_acc': 0.17864722880532644,
  'train_loss': 2.230715147166586}]
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).










































































































































































100%|██████████| 162032/162032 [13:07<00:00, 205.79it/s]

  2%|▏         | 1000/40507 [00:01<00:59, 667.97it/s]



























 96%|█████████▋| 39000/40507 [01:58<00:02, 711.06it/s]
100%|██████████| 40507/40507 [02:00<00:00, 335.36it/s]











































































































































































100%|█████████▉| 161920/162032 [30:54<00:00, 454.19it/s]
100%|██████████| 162032/162032 [30:54<00:00, 87.35it/s]



























 96%|█████████▋| 39000/40507 [02:36<00:03, 441.17it/s]
100%|██████████| 40507/40507 [02:38<00:00, 255.31it/s]















































































































































































100%|█████████▉| 161984/162032 [10:34<00:00, 440.12it/s]
100%|██████████| 162032/162032 [10:34<00:00, 255.47it/s]




























 99%|█████████▊| 40000/40507 [00:57<00:00, 713.06it/s]
Test Epoch: 2 | Loss: 2.232579 | Acc: 0.176784
[{'epoch': 0,
  'test_acc': 0.17678425951070184,
  'test_loss': 2.2326449749426027,
  'train_acc': 0.1779833613113459,
  'train_loss': 2.2321807330295296},
 {'epoch': 1,
  'test_acc': 0.17678425951070184,
  'test_loss': 2.2325616560100725,
  'train_acc': 0.1779833613113459,
  'train_loss': 2.2321387951849854},
 {'epoch': 2,
  'test_acc': 0.17678425951070184,
  'test_loss': 2.2325792069889157,
  'train_acc': 0.1779833613113459,

100%|██████████| 40507/40507 [00:58<00:00, 691.53it/s]
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).













































































































































































100%|█████████▉| 162368/162409 [05:48<00:00, 472.06it/s]
100%|██████████| 162409/162409 [05:48<00:00, 465.77it/s]




























 99%|█████████▊| 40000/40602 [00:57<00:00, 698.37it/s]
100%|██████████| 40602/40602 [00:58<00:00, 690.32it/s]












































































































































































100%|██████████| 162409/162409 [05:48<00:00, 466.56it/s]
  0%|          | 0/40602 [00:00<?, ?it/s]





























 96%|█████████▌| 39000/40602 [00:57<00:02, 682.34it/s]
100%|██████████| 40602/40602 [00:59<00:00, 682.82it/s]











































































































































































100%|█████████▉| 162176/162409 [05:43<00:00, 479.56it/s]
100%|██████████| 162409/162409 [05:44<00:00, 471.68it/s]




























100%|██████████| 40602/40602 [00:57<00:00, 707.78it/s]
Test Epoch: 2 | Loss: 2.232063 | Acc: 0.175238
[{'epoch': 0,
  'test_acc': 0.17523767302103344,
  'test_loss': 2.2320413711147236,
  'train_acc': 0.17785344408253237,
  'train_loss': 2.2327468831012913},
 {'epoch': 1,
  'test_acc': 0.17523767302103344,
  'test_loss': 2.2321389263459928,
  'train_acc': 0.17785344408253237,
  'train_loss': 2.232726952741447},
 {'epoch': 2,
  'test_acc': 0.17523767302103344,
  'test_loss': 2.232062536943993,
  'train_acc': 0.17785344408253237,
  'train_loss': 2.232740711526219}]
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).










































































































































































100%|█████████▉| 162240/162828 [05:42<00:01, 459.24it/s]
100%|██████████| 162828/162828 [05:44<00:00, 473.24it/s]




























100%|██████████| 40706/40706 [00:59<00:00, 688.04it/s]
  0%|          | 0/162828 [00:00<?, ?it/s]















































































































































































100%|██████████| 162828/162828 [14:05<00:00, 192.61it/s]
  0%|          | 0/40706 [00:00<?, ?it/s]



























100%|██████████| 40706/40706 [18:23<00:00, 36.88it/s]
  0%|          | 0/162828 [00:00<?, ?it/s]










































































































































































100%|██████████| 162828/162828 [18:12<00:00, 148.98it/s]
  0%|          | 0/40706 [00:00<?, ?it/s]





























100%|██████████| 40706/40706 [09:03<00:00, 74.87it/s]
Test Epoch: 2 | Loss: 2.234538 | Acc: 0.177861
[{'epoch': 0,
  'test_acc': 0.17786075762786813,
  'test_loss': 2.2347012725396747,
  'train_acc': 0.17662809836146118,
  'train_loss': 2.232489962220195},
 {'epoch': 1,
  'test_acc': 0.17786075762786813,
  'test_loss': 2.234551762946494,
  'train_acc': 0.17662809836146118,
  'train_loss': 2.2324686583279716},
 {'epoch': 2,
  'test_acc': 0.17786075762786813,
  'test_loss': 2.234537944344814,
  'train_acc': 0.17662809836146118,
  'train_loss': 2.232495649768699}]
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).











































































































































































100%|█████████▉| 162368/163080 [16:52<00:01, 485.92it/s]
100%|██████████| 163080/163080 [16:54<00:00, 160.75it/s]




























 98%|█████████▊| 40000/40769 [00:55<00:01, 712.88it/s]
100%|██████████| 40769/40769 [00:57<00:00, 714.43it/s]










































































































































































100%|█████████▉| 162432/163080 [58:47<00:01, 478.42it/s]
100%|██████████| 163080/163080 [58:48<00:00, 46.22it/s]




























 96%|█████████▌| 39000/40769 [00:58<00:02, 718.40it/s]
100%|██████████| 40769/40769 [07:05<00:00, 95.83it/s]








































































































































































100%|█████████▉| 163008/163080 [32:27<00:00, 481.11it/s]
100%|██████████| 163080/163080 [32:27<00:00, 83.72it/s]



























 96%|█████████▌| 39000/40769 [00:59<00:02, 711.59it/s]
Test Epoch: 2 | Loss: 2.233493 | Acc: 0.174618
[{'epoch': 0,
  'test_acc': 0.17461796953567663,
  'test_loss': 2.2336180676494397,
  'train_acc': 0.1770971302428256,
  'train_loss': 2.2329237792782552},
 {'epoch': 1,
  'test_acc': 0.17461796953567663,
  'test_loss': 2.233785742537222,
  'train_acc': 0.1770971302428256,
  'train_loss': 2.232944434783258},
 {'epoch': 2,
  'test_acc': 0.17461796953567663,
  'test_loss': 2.2334927426476,
  'train_acc': 0.1770971302428256,

100%|██████████| 40769/40769 [01:02<00:00, 654.79it/s]
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
XXXXXX SAVING MODELS XXXXXXXXX
Traceback (most recent call last):
  File "/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/pydevd.py", line 2195, in <module>
    main()
  File "/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/pydevd.py", line 2183, in main
    debugger.wait_for_commands(globals)
  File "/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/pydevd.py", line 1551, in wait_for_commands
    time.sleep(0.01)
